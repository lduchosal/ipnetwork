### YamlMime:ManagedReference
items:
- uid: System.Net.IPAddressCollection
  commentId: T:System.Net.IPAddressCollection
  id: IPAddressCollection
  parent: System.Net
  children:
  - System.Net.IPAddressCollection.Count
  - System.Net.IPAddressCollection.Current
  - System.Net.IPAddressCollection.Dispose
  - System.Net.IPAddressCollection.Item(System.Numerics.BigInteger)
  - System.Net.IPAddressCollection.MoveNext
  - System.Net.IPAddressCollection.Reset
  langs:
  - csharp
  - vb
  name: IPAddressCollection
  nameWithType: IPAddressCollection
  fullName: System.Net.IPAddressCollection
  type: Class
  source:
    remote:
      path: src/System.Net.IPNetwork/IPAddressCollection.cs
      branch: feat/cleanup-documentation
      repo: https://github.com/lduchosal/ipnetwork
    id: IPAddressCollection
    path: ../src/System.Net.IPNetwork/IPAddressCollection.cs
    startLine: 29
  assemblies:
  - System.Net.IPNetwork
  namespace: System.Net
  summary: Represents a collection of IP addresses within a specific IP network.
  example: []
  syntax:
    content: 'public class IPAddressCollection : IEnumerable<IPAddress>, IEnumerable, IEnumerator<IPAddress>, IEnumerator, IDisposable'
    content.vb: Public Class IPAddressCollection Implements IEnumerable(Of IPAddress), IEnumerable, IEnumerator(Of IPAddress), IEnumerator, IDisposable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{System.Net.IPAddress}
  - System.Collections.IEnumerable
  - System.Collections.Generic.IEnumerator{System.Net.IPAddress}
  - System.Collections.IEnumerator
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Net.IPAddressCollection.Count
  commentId: P:System.Net.IPAddressCollection.Count
  id: Count
  parent: System.Net.IPAddressCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: IPAddressCollection.Count
  fullName: System.Net.IPAddressCollection.Count
  type: Property
  source:
    remote:
      path: src/System.Net.IPNetwork/IPAddressCollection.cs
      branch: feat/cleanup-documentation
      repo: https://github.com/lduchosal/ipnetwork
    id: Count
    path: ../src/System.Net.IPNetwork/IPAddressCollection.cs
    startLine: 55
  assemblies:
  - System.Net.IPNetwork
  namespace: System.Net
  summary: Gets the count of IP addresses within the network.
  example: []
  syntax:
    content: public BigInteger Count { get; }
    parameters: []
    return:
      type: System.Numerics.BigInteger
      description: The count of IP addresses within the network.
    content.vb: Public ReadOnly Property Count As BigInteger
  overload: System.Net.IPAddressCollection.Count*
- uid: System.Net.IPAddressCollection.Item(System.Numerics.BigInteger)
  commentId: P:System.Net.IPAddressCollection.Item(System.Numerics.BigInteger)
  id: Item(System.Numerics.BigInteger)
  parent: System.Net.IPAddressCollection
  langs:
  - csharp
  - vb
  name: this[BigInteger]
  nameWithType: IPAddressCollection.this[BigInteger]
  fullName: System.Net.IPAddressCollection.this[System.Numerics.BigInteger]
  type: Property
  source:
    remote:
      path: src/System.Net.IPNetwork/IPAddressCollection.cs
      branch: feat/cleanup-documentation
      repo: https://github.com/lduchosal/ipnetwork
    id: this[]
    path: ../src/System.Net.IPNetwork/IPAddressCollection.cs
    startLine: 80
  assemblies:
  - System.Net.IPNetwork
  namespace: System.Net
  summary: Gets the IP address corresponding to the given index from the IPNetwork collection.
  example: []
  syntax:
    content: public IPAddress this[BigInteger i] { get; }
    parameters:
    - id: i
      type: System.Numerics.BigInteger
      description: The index of the IP address to retrieve.
    return:
      type: System.Net.IPAddress
      description: The IP address corresponding to the given index.
    content.vb: Public ReadOnly Default Property this[](i As BigInteger) As IPAddress
  overload: System.Net.IPAddressCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown when the given index is greater than or equal to the Count property of the IPNetwork collection.
  nameWithType.vb: IPAddressCollection.this[](BigInteger)
  fullName.vb: System.Net.IPAddressCollection.this[](System.Numerics.BigInteger)
  name.vb: this[](BigInteger)
- uid: System.Net.IPAddressCollection.Current
  commentId: P:System.Net.IPAddressCollection.Current
  id: Current
  parent: System.Net.IPAddressCollection
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: IPAddressCollection.Current
  fullName: System.Net.IPAddressCollection.Current
  type: Property
  source:
    remote:
      path: src/System.Net.IPNetwork/IPAddressCollection.cs
      branch: feat/cleanup-documentation
      repo: https://github.com/lduchosal/ipnetwork
    id: Current
    path: ../src/System.Net.IPNetwork/IPAddressCollection.cs
    startLine: 110
  assemblies:
  - System.Net.IPNetwork
  namespace: System.Net
  summary: Gets the current <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref> from the collection.
  example: []
  syntax:
    content: public IPAddress Current { get; }
    parameters: []
    return:
      type: System.Net.IPAddress
      description: The current <xref href="System.Net.IPAddress" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public ReadOnly Property Current As IPAddress
  overload: System.Net.IPAddressCollection.Current*
  implements:
  - System.Collections.Generic.IEnumerator{System.Net.IPAddress}.Current
- uid: System.Net.IPAddressCollection.MoveNext
  commentId: M:System.Net.IPAddressCollection.MoveNext
  id: MoveNext
  parent: System.Net.IPAddressCollection
  langs:
  - csharp
  - vb
  name: MoveNext()
  nameWithType: IPAddressCollection.MoveNext()
  fullName: System.Net.IPAddressCollection.MoveNext()
  type: Method
  source:
    remote:
      path: src/System.Net.IPNetwork/IPAddressCollection.cs
      branch: feat/cleanup-documentation
      repo: https://github.com/lduchosal/ipnetwork
    id: MoveNext
    path: ../src/System.Net.IPNetwork/IPAddressCollection.cs
    startLine: 128
  assemblies:
  - System.Net.IPNetwork
  namespace: System.Net
  summary: Advances the enumerator to the next element of the collection.
  example: []
  syntax:
    content: public bool MoveNext()
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the enumerator was successfully advanced to the next element; <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if the enumerator has passed the end of the collection.
    content.vb: Public Function MoveNext() As Boolean
  overload: System.Net.IPAddressCollection.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The collection was modified after the enumerator was created.
  implements:
  - System.Collections.IEnumerator.MoveNext
- uid: System.Net.IPAddressCollection.Reset
  commentId: M:System.Net.IPAddressCollection.Reset
  id: Reset
  parent: System.Net.IPAddressCollection
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: IPAddressCollection.Reset()
  fullName: System.Net.IPAddressCollection.Reset()
  type: Method
  source:
    remote:
      path: src/System.Net.IPNetwork/IPAddressCollection.cs
      branch: feat/cleanup-documentation
      repo: https://github.com/lduchosal/ipnetwork
    id: Reset
    path: ../src/System.Net.IPNetwork/IPAddressCollection.cs
    startLine: 140
  assemblies:
  - System.Net.IPNetwork
  namespace: System.Net
  summary: Sets the enumerator to its initial position, which is before the first element in the collection.
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: System.Net.IPAddressCollection.Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The collection was modified after the enumerator was created.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The enumerator does not support being reset.
  implements:
  - System.Collections.IEnumerator.Reset
- uid: System.Net.IPAddressCollection.Dispose
  commentId: M:System.Net.IPAddressCollection.Dispose
  id: Dispose
  parent: System.Net.IPAddressCollection
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: IPAddressCollection.Dispose()
  fullName: System.Net.IPAddressCollection.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Net.IPNetwork/IPAddressCollection.cs
      branch: feat/cleanup-documentation
      repo: https://github.com/lduchosal/ipnetwork
    id: Dispose
    path: ../src/System.Net.IPNetwork/IPAddressCollection.cs
    startLine: 146
  assemblies:
  - System.Net.IPNetwork
  namespace: System.Net
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: System.Net.IPAddressCollection.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: System.Net
  commentId: N:System.Net
  href: System.html
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
  spec.csharp:
  - uid: System
    name: System
    href: System.html
  - name: .
  - uid: System.Net
    name: Net
    href: System.Net.html
  spec.vb:
  - uid: System
    name: System
    href: System.html
  - name: .
  - uid: System.Net
    name: Net
    href: System.Net.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IEnumerable{System.Net.IPAddress}
  commentId: T:System.Collections.Generic.IEnumerable{System.Net.IPAddress}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IPAddress>
  nameWithType: IEnumerable<IPAddress>
  fullName: System.Collections.Generic.IEnumerable<System.Net.IPAddress>
  nameWithType.vb: IEnumerable(Of IPAddress)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Net.IPAddress)
  name.vb: IEnumerable(Of IPAddress)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Net.IPAddress
    name: IPAddress
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.ipaddress
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.IPAddress
    name: IPAddress
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.ipaddress
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.IEnumerator{System.Net.IPAddress}
  commentId: T:System.Collections.Generic.IEnumerator{System.Net.IPAddress}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<IPAddress>
  nameWithType: IEnumerator<IPAddress>
  fullName: System.Collections.Generic.IEnumerator<System.Net.IPAddress>
  nameWithType.vb: IEnumerator(Of IPAddress)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Net.IPAddress)
  name.vb: IEnumerator(Of IPAddress)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: System.Net.IPAddress
    name: IPAddress
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.ipaddress
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.IPAddress
    name: IPAddress
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.ipaddress
  - name: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Net.IPAddressCollection.Count*
  commentId: Overload:System.Net.IPAddressCollection.Count
  href: System.Net.IPAddressCollection.html#System_Net_IPAddressCollection_Count
  name: Count
  nameWithType: IPAddressCollection.Count
  fullName: System.Net.IPAddressCollection.Count
- uid: System.Numerics.BigInteger
  commentId: T:System.Numerics.BigInteger
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.biginteger
  name: BigInteger
  nameWithType: BigInteger
  fullName: System.Numerics.BigInteger
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Net.IPAddressCollection.Item*
  commentId: Overload:System.Net.IPAddressCollection.Item
  href: System.Net.IPAddressCollection.html#System_Net_IPAddressCollection_Item_System_Numerics_BigInteger_
  name: this
  nameWithType: IPAddressCollection.this
  fullName: System.Net.IPAddressCollection.this
  nameWithType.vb: IPAddressCollection.this[]
  fullName.vb: System.Net.IPAddressCollection.this[]
  name.vb: this[]
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.ipaddress
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.IPAddressCollection.Current*
  commentId: Overload:System.Net.IPAddressCollection.Current
  href: System.Net.IPAddressCollection.html#System_Net_IPAddressCollection_Current
  name: Current
  nameWithType: IPAddressCollection.Current
  fullName: System.Net.IPAddressCollection.Current
- uid: System.Collections.Generic.IEnumerator{System.Net.IPAddress}.Current
  commentId: P:System.Collections.Generic.IEnumerator{System.Net.IPAddress}.Current
  parent: System.Collections.Generic.IEnumerator{System.Net.IPAddress}
  definition: System.Collections.Generic.IEnumerator`1.Current
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1.current
  name: Current
  nameWithType: IEnumerator<IPAddress>.Current
  fullName: System.Collections.Generic.IEnumerator<System.Net.IPAddress>.Current
  nameWithType.vb: IEnumerator(Of IPAddress).Current
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Net.IPAddress).Current
- uid: System.Collections.Generic.IEnumerator`1.Current
  commentId: P:System.Collections.Generic.IEnumerator`1.Current
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1.current
  name: Current
  nameWithType: IEnumerator<T>.Current
  fullName: System.Collections.Generic.IEnumerator<T>.Current
  nameWithType.vb: IEnumerator(Of T).Current
  fullName.vb: System.Collections.Generic.IEnumerator(Of T).Current
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Net.IPAddressCollection.MoveNext*
  commentId: Overload:System.Net.IPAddressCollection.MoveNext
  href: System.Net.IPAddressCollection.html#System_Net_IPAddressCollection_MoveNext
  name: MoveNext
  nameWithType: IPAddressCollection.MoveNext
  fullName: System.Net.IPAddressCollection.MoveNext
- uid: System.Collections.IEnumerator.MoveNext
  commentId: M:System.Collections.IEnumerator.MoveNext
  parent: System.Collections.IEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator.movenext
  name: MoveNext()
  nameWithType: IEnumerator.MoveNext()
  fullName: System.Collections.IEnumerator.MoveNext()
  spec.csharp:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator.movenext
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator.movenext
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.Net.IPAddressCollection.Reset*
  commentId: Overload:System.Net.IPAddressCollection.Reset
  href: System.Net.IPAddressCollection.html#System_Net_IPAddressCollection_Reset
  name: Reset
  nameWithType: IPAddressCollection.Reset
  fullName: System.Net.IPAddressCollection.Reset
- uid: System.Collections.IEnumerator.Reset
  commentId: M:System.Collections.IEnumerator.Reset
  parent: System.Collections.IEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator.reset
  name: Reset()
  nameWithType: IEnumerator.Reset()
  fullName: System.Collections.IEnumerator.Reset()
  spec.csharp:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator.reset
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator.reset
  - name: (
  - name: )
- uid: System.Net.IPAddressCollection.Dispose*
  commentId: Overload:System.Net.IPAddressCollection.Dispose
  href: System.Net.IPAddressCollection.html#System_Net_IPAddressCollection_Dispose
  name: Dispose
  nameWithType: IPAddressCollection.Dispose
  fullName: System.Net.IPAddressCollection.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
